// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// mysum
NumericVector mysum(int lengthx, arma::rowvec x, arma::rowvec a, arma::colvec b, double pi);
RcppExport SEXP _yuimaStable_mysum(SEXP lengthxSEXP, SEXP xSEXP, SEXP aSEXP, SEXP bSEXP, SEXP piSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type lengthx(lengthxSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type a(aSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type pi(piSEXP);
    rcpp_result_gen = Rcpp::wrap(mysum(lengthx, x, a, b, pi));
    return rcpp_result_gen;
END_RCPP
}
// mytail
NumericVector mytail(int lengthx, arma::vec x, arma::vec exp1, arma::vec V, arma::vec logw);
RcppExport SEXP _yuimaStable_mytail(SEXP lengthxSEXP, SEXP xSEXP, SEXP exp1SEXP, SEXP VSEXP, SEXP logwSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type lengthx(lengthxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type exp1(exp1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type V(VSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type logw(logwSEXP);
    rcpp_result_gen = Rcpp::wrap(mytail(lengthx, x, exp1, V, logw));
    return rcpp_result_gen;
END_RCPP
}
// CompMatAsym
List CompMatAsym(int pos, arma::mat Deriv_A, arma::vec estim_jump, arma::mat logDeriv_C);
RcppExport SEXP _yuimaStable_CompMatAsym(SEXP posSEXP, SEXP Deriv_ASEXP, SEXP estim_jumpSEXP, SEXP logDeriv_CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type pos(posSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Deriv_A(Deriv_ASEXP);
    Rcpp::traits::input_parameter< arma::vec >::type estim_jump(estim_jumpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type logDeriv_C(logDeriv_CSEXP);
    rcpp_result_gen = Rcpp::wrap(CompMatAsym(pos, Deriv_A, estim_jump, logDeriv_C));
    return rcpp_result_gen;
END_RCPP
}
// CompMatAsym1
List CompMatAsym1(int pos, arma::mat Deriv_A, arma::vec estim_jump, arma::mat logDeriv_C, arma::vec W);
RcppExport SEXP _yuimaStable_CompMatAsym1(SEXP posSEXP, SEXP Deriv_ASEXP, SEXP estim_jumpSEXP, SEXP logDeriv_CSEXP, SEXP WSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type pos(posSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Deriv_A(Deriv_ASEXP);
    Rcpp::traits::input_parameter< arma::vec >::type estim_jump(estim_jumpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type logDeriv_C(logDeriv_CSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type W(WSEXP);
    rcpp_result_gen = Rcpp::wrap(CompMatAsym1(pos, Deriv_A, estim_jump, logDeriv_C, W));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_yuimaStable_mysum", (DL_FUNC) &_yuimaStable_mysum, 5},
    {"_yuimaStable_mytail", (DL_FUNC) &_yuimaStable_mytail, 5},
    {"_yuimaStable_CompMatAsym", (DL_FUNC) &_yuimaStable_CompMatAsym, 4},
    {"_yuimaStable_CompMatAsym1", (DL_FUNC) &_yuimaStable_CompMatAsym1, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_yuimaStable(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
